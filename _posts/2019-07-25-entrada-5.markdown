---
layout: post
title: "Entrada 5: Modulos"
date: "2019-07-25 19:38:47 -0500"
---
El concepto de los módulos es simple, es un bloque de código guardado como una librería, uno puede crear sus propios módulos, puede usar los módulos de python que vienen en el editor, o puede importar módulos de python externos o de otro archivo.

Para crear un modulo solo tienes que guardar un archivo como .py

por ejemplo:

```python
def saludar(nombre):
  print "Hola, " + nombre

def despedir(nombre):
	print "Adiós, " + nombre

persona1 = {"nombre": "Marcelo", "edad": 14}
```

Ahora, tendría que guardar este archivo en .py, lo guardaré como miprimermodulo.py

Ahora para usarlo solo tengo que poner primero import nombreDelModulo, y para usar el código dentro tengo que usar:

`nombreDelModulo.nombreDeLaFuncion(variable)`

```python
import miprimermodulo

print miprimermodulo.saludar("Marcelo")
print miprimermodulo.persona1["nombre"]
```
```python
> Hola, Marcelo
> Marcelo
```

A la hora de llamar a un modulo lo puedes renombrar para un uso más fácil

```python
import miprimermodulo as mpm

mpm.persona1["edad"]
```
```python
> 14
```

Un módulo que personalmente he usado bastante, ha sido el modulo llamado random de python. Este modulo tiene un montón de funciones como generar un numero al azar o elegir una variable al azar de una lista, etc.

```python
import random

a = [1, "hola", 2.0]
random.randint(1, 10)
random.choice(a)
```
```python
> 5
> 2.0
```
Otro modulo interesante es el modulo de processing que es principalmenta la forma de programacion visual en python. A diferencia de random este no se importa, ya que tiene su mismo programa para usar el modulo, dentro de este programa ya no tendrias que poner import processing, debido a que esto esta implicito. Processing tiene dos funciones muy importantes:

* setup: es el codigo que corre primero para definir como va a ser el entorno, tamaños, colores, establecer.
* draw: todo codigo debajo de el se va a correr 60 veces por segundo.

```python
def setup():
  size(300, 400)
def draw():
  elipse(150, 200, 30, 40)
```
En este ejemplo no use import processing y processing.funcion porque este vendria a escribirse dentro de el programa processing donde las importaciones son explicitas.

Lo que se estaria corriendo en este ejemplo es: Primero en setup con la ayuda de la funcion size se definiria un area o canvas, como se suele llamar, en donde va a ocurrir todo, este area en este ejemplo es de 300 pixeles de ancho y 400 de alto. Luego con la funcion elipse, se dibujaria una elipse en el pixel 150 de ancho y 200 de alto, y tendria como medidas 30 pixeles de ancho y 40 de alto.
